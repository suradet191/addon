//const {expressWarped, expressErrorWarped, LogSingleton, ACTION_TYPE} = require("../loglib");
const request = require("request");
var sync_request = require('sync-request');
const config = require('./config.json');

const express = require('express')
const app = express()
const port = 3000

//LogSingleton.setup(config);

app.get('/',(req, res, next) => {
    console.log("xxx");
    //log = LogSingleton.getLog(args);
    //log.debug("testlog", {"aaa":"ccc"});
    //log.activity(ACTION_TYPE.APPLICATION_ACTIVITY.CREATE, "sss", "test activity");
    //headers = log.get_log_header;
    try{
        //var xxx = sync_request('GET', 'http://localhost:5000/test2', {headers:headers});
        //console.log(xxx.getBody())
        //let result = {meta:{response_code:20000, response_desc:"Success"},data:{a:1}};
        let result = {response_code:20000, response_desc:"Success",data:{a:1}};
        res.send(result);
        return result;
    }catch(e){
        //next(e);
    }
});

app.get('/aaa', (req, res, next) => {
   // log = LogSingleton.getLog(args);
    //log.debug("---");
    try{
        throw new Error("test error");
        let result = {meta:{response_code:20000, response_desc:"Success"},data:{a:1}};
        res.send(result);
        return result;
    }
    catch(e){
        next(e);
    }
});

app.use((req, res, next) => {
    
    console.log('aa Time:', Date.now())
    //log = LogSingleton.getLog(args);
    //log.debug('aaa');
    //next()
});

app.use((req, res, next) => {
    console.log('bb Time:', Date.now())
    //log = LogSingleton.getLog(args);
    //log.debug('bbb');
});


// app.use((err, req, res, next) => {
//     console.log('9999999999');
//     //log = LogSingleton.getLog(args);
//     //log.debug('error', err.message);
//     res.status(500).send("error");
// });

app.use((err, req, res, next) => {
    //log = LogSingleton.getLog(args);
    //log.exception(err.message);
    res.status(500).send("error");
});

//log = new LogSingleton().getInstance();
//log.debug("yyyy", {std_out:true});

app.listen(port, () => console.log(`Example app listening on port ${port}!`))