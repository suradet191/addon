const {LogSingleton, ACTION_TYPE} = require("./index");
const config = require('./config.json');

LogSingleton.setup(config);

LogSingleton.setLogLevel(LogSingleton.LogLevel.ALL)

log = LogSingleton.getLog(undefined, {"a":5,'b':"2", 'c': 3});
log.debug("debug0", {"c":"c"});
log.info("info0");
log.error("error0");
log.biz("bbbb", {APP_LOG_EVENT_ID:'qqq', COMPONENT_CODE:"ewrwer", a:"888", std_out:true})
log.activity(ACTION_TYPE.AUTHENTICATION.LOGIN, "surawej", "test activity", {'std_out':true});

//let actor = "eyJraWQiOiJGSDVyTDVwR19tT25zZHRCRlY1dDlxbUF6ZjAtNjBLRmc3dXpEaHFOaGdBIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIwMHUyM3AxMDJ6SlNCb3FZSzF0NyIsIm5hbWUiOiJ2YXJ1dCAtIiwidmVyIjoxLCJpc3MiOiJodHRwczovL2FscGhhLXRpc2NvLm9rdGEuY29tL29hdXRoMi9kZWZhdWx0IiwiYXVkIjoiMG9hZmEwZzU0MTE1NFJCZHExdDciLCJpYXQiOjE2MjAyNzUxNDAsImV4cCI6MTYyMDI3ODc0MCwianRpIjoiSUQuWHRVVGlaYWNkeTRicVB2V010SW16X2E2aXk5Q19zekx5RHVtWXMzbHhiZyIsImFtciI6WyJwd2QiXSwiaWRwIjoiMDBvMTlrd3U2eUdVZWo0VW4xdDciLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJ2YXJ1dEB0aXNjby5jby50aCIsImF1dGhfdGltZSI6MTYyMDI3NTEzOSwiYXRfaGFzaCI6ImJwX0tWV0RjcDB5eGdRZEtKa2hjUGciLCJjbG91ZGZsYXJlX2dyb3VwIjpbIjEzLTIiLCIxMy03Il0sInVzZXJfaWQiOiIwMHViOTF6eHBoU2d4akNwMzBoNyIsImVtcGxveWVlX2RldGFpbCI6eyJlbXBsb3llZV9pZCI6IkVtcF8wMSIsImN1c3RvbWVyX2luZm9ybWF0aW9uIjoiQXV0b18xNyIsImVtcGxveWVlX2NvZGUiOiIxMDQ4IiwiZW1wbG95ZWVfdHlwZSI6MSwiZW1wbG95ZWVfdHlwZV9pbl90aGFpIjoi4Lie4LiZ4Lix4LiB4LiH4Liy4LiZ4Lib4Lij4Liw4LiI4LizIiwiZW1wbG95ZWVfdHlwZV9pbl9lbmdsaXNoIjoiUGVybWFuZW50IiwiZW1wbG95bWVudF9zdGF0dXMiOjIsImVtcGxveW1lbnRfc3RhdHVzX2luX3RoYWkiOiLguJ7guJnguLHguIHguIfguLLguJkiLCJlbXBsb3ltZW50X3N0YXR1c19pbl9lbmdsaXNoIjoiRW1wbG95ZWUiLCJmaXJzdF9uYW1lIjoiRW1wMDEiLCJsYXN0X25hbWUiOiJMYXN0bmFtZTAxIiwiZGF0YV9wcm9jZXNzb3IiOiJBdXRvXzE0IiwiZGF0YV9jb250cm9sbGVyIjoiQXV0b18xNCIsInJlZ2lzdGVyX3NlcnZpY2VfaWQiOiJSZWdpc3QwMSIsImNvbXBhbnlfaW5mb3JtYXRpb24iOiJBdXRvXzE0IiwiY29tcGFueV9uYW1lIjoi4Lia4LilIOC4l-C4tOC4quC5guC4geC5iSDguIjguLPguIHguLHguJQiLCJqb2JfYXNzaWdubWVudCI6W3siam9iX2Fzc2lnbm1lbnRfaWQiOiJCMDdDRDE4Qy1CMTY2LTQ5RjktOUM4OC0yQ0ZBREI0M0VEQzMiLCJwcmltYXJ5X2pvYl90aXRsZSI6dHJ1ZSwiam9iX3RpdGxlX2lkIjoiOTFCOEQ4NDMtQUFFNy00ODAwLUFGN0UtQTY1NTA0OThEMkUyIiwiam9iX3RpdGxlX2luX2VuZ2xpc2giOiJBZG1pbiBTdGFmZiIsImpvYl90aXRsZV9pbl90aGFpIjoiQWRtaW4gU3RhZmYifV0sImJyYW5jaCI6W3siZW1wbG95ZWVfYnJhbmNoX2lkIjoiNEIzRUNGRUItMEQ3Qi00NDY4LTgyMDktQzNBMUEzN0NBNzdDIiwicHJpbWFyeV9icmFuY2giOnRydWUsImJyYW5jaF9pbmZvcm1hdGlvbiI6IlRJU0NPX0Fzc2V0X0JyYW5jaF8wMSIsImJyYW5jaF9jb2RlIjoiVElTQ08gQXNzZXQtMDAxIiwiYnJhbmNoX25hbWVfdGgiOiLguKrguLPguJnguLHguIHguIfguLLguJnguYPguKvguI3guYgifV0sImVudGVycHJpc2Vfcm9sZV9pZCI6IkVKLTE4IiwiZW50ZXJwcmlzZV9yb2xlX25hbWUiOiJUZXN0IFRlc3QgZWllaSIsIm9yZ2FuaXphdGlvbl91bml0X2lkIjoiQTEwMDY2REMtRDkzRi00REQwLUE1RjctNjRBMjMxRThBRUIyIiwib3JnYW5pemF0aW9uX3VuaXRfY29kZSI6IlROTCIsImVuZ2xpc2hfb3JnYW5pemF0aW9uX3VuaXRfbmFtZSI6IlROTCIsInRlbGVwaG9uZV9jb250YWN0IjpbXSwicmVnaXN0cmF0aW9uX3NlcnZpY2VfaWQiOiJSZWdpc3QwMSIsImNvbXBhbnlfY29kZSI6IjQwIiwiY29tcGFueV9zaG9ydF9uYW1lIjoiVElTQ09BU1NFVCJ9LCJlcm1fcm9sZSI6IkVKLTMwIiwicmVnaXNfc2VydmljZV9pZCI6IlJlZ2lzdDAxIiwic3ViX3N0YXRlXzQiOiJzdGF0ZTQiLCJzdGF0dXMiOiIwMHViOTF6eHBoU2d4akNwMzBoNyIsInRlc3RfaWQiOiIwMHUyM3AxMDJ6SlNCb3FZSzF0NyJ9.OoEs0h2leoPFbnPsTPk1f5HcwvwYCZl6wkV7L63y5dg276vOCs9Z6Xm-69DQaBNmEW_vmVn8cCO5Y7PUCqb_saUfzuRqPjsSsucRr7iiOaCBF_74uk8OKCfxPYCID-ZOwjUiTwX-Pd2wY6hxG9bo0IxGlVLpgwJpeLoPyVE4KoKPtUgcDCZAvFtyn-p1P8FEMDIgeKAjGNBPjX1rB5OyAWaYIVzFFLvlBDxuWwRrbLSMf_PN2yduAkR5W0iPobT6Yzr57DakEiprBHgqzMmkKM5hZIv5uDFLCclyfeOopbPXI6Q-wGW-SkVl0H04ZX2qcLi-ljfDrmfbF4OGhs16Tg"
let actor = "eyJraWQiOiJmalNncHFYTGN6VTBqcTZ6VjZpeDQ5YWpqMVpDaWFSS0RRSTlUUU8yRUNJIiwiYWxnIjoiUlMyNTYifQ.eyJzdWIiOiIwMHVkNGI1czB6RmV1MGsyUjF0NyIsIm5hbWUiOiJzaXJhcHJhcGEgVS1QaXRhayIsInZlciI6MSwiaXNzIjoiaHR0cHM6Ly9hbHBoYS10aXNjby5va3RhLmNvbS9vYXV0aDIvZGVmYXVsdCIsImF1ZCI6IjBvYWY4cHphb2NXalZhaTM2MXQ3IiwiaWF0IjoxNjI4ODM0NDg3LCJleHAiOjE2Mjg4MzgwODcsImp0aSI6IklELkx0LU1wMnRkc2hCTVJSSXh2UGk4NTJpVFhlNlBsWUZRVFZkZWNXZloxRnMiLCJhbXIiOlsicHdkIl0sImlkcCI6IjAwbzE5a3d1NnlHVWVqNFVuMXQ3Iiwibm9uY2UiOiIxMDAwMDQ3IiwicHJlZmVycmVkX3VzZXJuYW1lIjoienNpcmFwcmFwYUB0aXNjby5jby50aCIsImF1dGhfdGltZSI6MTYyODgzNDQ3NCwiYXRfaGFzaCI6Ijg5MDdtWkZXbW1peHp1SUdWd3NBbWciLCJ1c2VyX2lkIjoiYzViNDgyMDctNDc5ZS00MWM0LWI5YzItNzI2NTUxZGRhNGZkIiwiY2xvdWRmbGFyZV9ncm91cCI6WyIxMy02Il0sImVtcGxveWVlX2RldGFpbCI6eyJlbXBsb3llZV9pZCI6IkVtcF8wMSIsImN1c3RvbWVyX2luZm9ybWF0aW9uIjoiQXV0b18xNyIsImVtcGxveWVlX2NvZGUiOiIxMDQ3IiwiZW1wbG95ZWVfdHlwZSI6MSwiZW1wbG95ZWVfdHlwZV9pbl90aGFpIjoi4Lie4LiZ4Lix4LiB4LiH4Liy4LiZ4Lib4Lij4Liw4LiI4LizIiwiZW1wbG95ZWVfdHlwZV9pbl9lbmdsaXNoIjoiUGVybWFuZW50IiwiZW1wbG95bWVudF9zdGF0dXMiOjIsImVtcGxveW1lbnRfc3RhdHVzX2luX3RoYWkiOiLguJ7guJnguLHguIHguIfguLLguJkiLCJlbXBsb3ltZW50X3N0YXR1c19pbl9lbmdsaXNoIjoiRW1wbG95ZWUiLCJmaXJzdF9uYW1lIjoiRW1wMDEiLCJsYXN0X25hbWUiOiJMYXN0bmFtZTAxIiwiZGF0YV9wcm9jZXNzb3IiOiJBdXRvXzE0IiwiZGF0YV9jb250cm9sbGVyIjoiQXV0b18xNCIsInJlZ2lzdGVyX3NlcnZpY2VfaWQiOiJSZWdpc3QwMSIsImNvbXBhbnlfaW5mb3JtYXRpb24iOiJBdXRvXzE0IiwiY29tcGFueV9uYW1lIjoi4Lia4LilIOC4l-C4tOC4quC5guC4geC5iSDguIjguLPguIHguLHguJQiLCJqb2JfYXNzaWdubWVudCI6W3siam9iX2Fzc2lnbm1lbnRfaWQiOiJCMDdDRDE4Qy1CMTY2LTQ5RjktOUM4OC0yQ0ZBREI0M0VEQzMiLCJwcmltYXJ5X2pvYl90aXRsZSI6dHJ1ZSwiam9iX3RpdGxlX2lkIjoiOTFCOEQ4NDMtQUFFNy00ODAwLUFGN0UtQTY1NTA0OThEMkUyIiwiam9iX3RpdGxlX2luX2VuZ2xpc2giOiJBZG1pbiBTdGFmZiIsImpvYl90aXRsZV9pbl90aGFpIjoiQWRtaW4gU3RhZmYifV0sImJyYW5jaCI6W10sImVudGVycHJpc2Vfcm9sZV9pZCI6IkVKLTE4IiwiZW50ZXJwcmlzZV9yb2xlX25hbWUiOiJUZXN0IFRlc3QgZWllaSIsInRlbGVwaG9uZV9jb250YWN0IjpbXSwicmVnaXN0cmF0aW9uX3NlcnZpY2VfaWQiOiJSZWdpc3QwMSIsImNvbXBhbnlfY29kZSI6IjQwIiwiY29tcGFueV9zaG9ydF9uYW1lIjoiVElTQ09BU1NFVCJ9LCJlcm1fcm9sZSI6ImMxNzBhMDAxLWIzMWMtNGU5My1hMDBlLTUxZTllODJmZjYzMCIsIjEyNF9ncm91cF9uYW1lIjpbIjEyNC0xIl0sInJlZ2lzX3NlcnZpY2VfaWQiOiJSZWdpc3QwMSIsInN1Yl9zdGF0ZV80Ijoic3RhdGU0Iiwic3RhdHVzIjoiYzViNDgyMDctNDc5ZS00MWM0LWI5YzItNzI2NTUxZGRhNGZkIiwidGVzdF9pZCI6IjAwdWQ0YjVzMHpGZXUwazJSMXQ3In0.NL5fZR4eh8F5wr-OIZR_JmCdYXyAgQv2vtdNNRCPM_96BrEn634NVkZu26VeU-0-0_DjZxxCNv-jz2x88Ta-TdVfal00tKQ4xGuGpsF7XxRiptnobsvqeo_b8Skgpxp99O-FxOn1Bh-WDiBerElGErxnq74BiVwbuxZDa27YXhT-bjjPDI7M0ZtfG2jbEmR6p8yzEpyA2qfAvukcYWMqYJudOuDu_fVWZlsFRT_HefEL5DNbsN4vksETvulYKYs2AxyGd2p-z4mY_2mrIcubBDOMuNKx7uG6tJJoUwt9pTyv5wu09nc9OMo3VRiC3J5QXVXye2GVe5X6hkdv5mkIhw"
let event = {
    'serverity': 'debug',
    'action': 'test',
    'eventStatus': 'SUCCESS'
}
let target = {
    'targetID': 'testxxx',
    'user': 'testuser',
    'detail': 'SUCCESS'
}

//user activity
log.user_activity({Actor:actor, Event:event, Target:target, std_out:true})
log.user_activity({Actor:{id:"123", name:"user_activity", detail:{info:'xxx'}}, Event:event, Target:target, std_out:true})
log.user_activity({Actor:{id:"123", name:"user_activity", detail:"xxx"}, Event:event, Target:target, std_out:true})
log.user_activity({Actor:{id:"123", name:"user_activity", detail:""}, Event:event, Target:target, std_out:true})
log.user_activity({Actor:{id:"123", name:"user_activity"}, Event:event, Target:target, std_out:true})
log.user_activity({Event:event, Target:target, std_out:true})

//user management
log.user_management({Actor:actor, Event:event, Target:target, std_out:true})
log.user_management({Actor:{id:"123", name:"user_management", detail:{info:'xxx'}}, Event:event, Target:target, std_out:true})
log.user_management({Actor:{id:"123", name:"user_management", detail:"xxx"}, Event:event, Target:target, std_out:true})
log.user_management({Actor:{id:"123", name:"user_management", detail:""}, Event:event, Target:target, std_out:true})
log.user_management({Actor:{id:"123", name:"user_management"}, Event:event, Target:target, std_out:true})
log.user_management({Event:event, Target:target, std_out:true})

//user authentication
log.user_authentication({Actor:actor, Event:event, Target:target, std_out:true})
log.user_authentication({Actor:{id:"123", name:"user_authentication", detail:{info:'xxx'}}, Event:event, Target:target, std_out:true})
log.user_authentication({Actor:{id:"123", name:"user_authentication", detail:"xxx"}, Event:event, Target:target, std_out:true})
log.user_authentication({Actor:{id:"123", name:"user_authentication", detail:""}, Event:event, Target:target, std_out:true})
log.user_authentication({Actor:{id:"123", name:"user_authentication"}, Event:event, Target:target, std_out:true})
log.user_authentication({Event:event, Target:target, std_out:true})
